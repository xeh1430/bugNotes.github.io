<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Spring Boot项目创建</title>
      <link href="/2018/12/17/Spring%20Boot%20Create/"/>
      <url>/2018/12/17/Spring%20Boot%20Create/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong><a href="https://baike.baidu.com/item/Spring%20Boot/20249767?fr=aladdin" target="_blank" rel="noopener">Spring Boot</a>是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Spring Boot致力于在蓬勃发展的快速应用开发领域(rapid application development)成为领导者。</strong></p></blockquote><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p><strong>简单、快速、方便</strong></p><blockquote><p><strong>创建独立的Spring应用程序<br>直接嵌入Tomcat，Jetty或Undertow（无需部署WAR文件）<br>提供自以为是的“入门”依赖项以简化构建配置<br>尽可能自动配置Spring和第三方库<br>提供生产就绪功能，例如指标，运行状况检查和外部化配置<br>绝对没有代码生成，也不需要XML配置</strong></p></blockquote><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><p><strong>创建springboot有两个方式，通过访问<a href="http://start.spring.io" target="_blank" rel="noopener">http://start.spring.io</a>获取springboot基础项目，<br>通过IDE创建springboot项目。</strong></p><h4 id="通过http-start-spring-io下载springboot基础项目"><a href="#通过http-start-spring-io下载springboot基础项目" class="headerlink" title="通过http://start.spring.io下载springboot基础项目"></a>通过<a href="http://start.spring.io" target="_blank" rel="noopener">http://start.spring.io</a>下载springboot基础项目</h4><p>1.访问<a href="http://start.spring.io" target="_blank" rel="noopener">http://start.spring.io</a><br>2.选择配置相关参数，如下图<br><img src="https://xeh1430.github.io/img/springboot_1.png" alt=""><br>3.将下载的项目压缩包解压，导入IDE即可</p><h4 id="通过IDE创建springboot项目-以idea为例"><a href="#通过IDE创建springboot项目-以idea为例" class="headerlink" title="通过IDE创建springboot项目(以idea为例)"></a>通过IDE创建springboot项目(以idea为例)</h4><p>打开idea，File -&gt; New -&gt; Project -&gt; 选择Spring Initializr -&gt; Next -&gt; 设置包名项目名构建工具 Next -&gt; 添加依赖 Next -&gt; Finish<br><img src="https://xeh1430.github.io/img/springboot_2.png" alt=""><br><img src="https://xeh1430.github.io/img/springboot_3.png" alt=""><br><img src="https://xeh1430.github.io/img/springboot_4.png" alt=""><br><img src="https://xeh1430.github.io/img/springboot_5.png" alt=""><br><img src="https://xeh1430.github.io/img/springboot_6.png" alt=""><br>打开项目，项目结构如下<br><img src="https://xeh1430.github.io/img/springboot_7.png" alt=""><br>如上图所示，Spring Boot的基础结构共三个文件:</p><ul><li>src/main/java  程序开发以及主程序入口</li><li>src/main/resources 配置文件</li><li>src/test/java  测试程序</li></ul><p>至此，springboot构建成功。</p><h3 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h3><p><a href="https://spring.io/projects/spring-boot" target="_blank" rel="noopener">springboot官网</a><br><a href="https://spring.io/guides" target="_blank" rel="noopener">springboot官方入门案例</a></p>]]></content>
      
      
      <categories>
          
          <category> spring boot </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Web Service调用天气预报</title>
      <link href="/2018/11/26/Web%20Service%20Weather/"/>
      <url>/2018/11/26/Web%20Service%20Weather/</url>
      
        <content type="html"><![CDATA[<h3 id="webservice-资源"><a href="#webservice-资源" class="headerlink" title="webservice 资源"></a>webservice 资源</h3><blockquote><p><strong>免费webservice接口，包含天气预报、国内手机号码归属地查询WEB服务等多种服务</strong><br><a href="http://www.webxml.com.cn/zh_cn/web_services.aspx" target="_blank" rel="noopener">http://www.webxml.com.cn/zh_cn/web_services.aspx</a><br><strong>本次项目使用天气预报的接口</strong><br><a href="http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl" target="_blank" rel="noopener">http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl</a><br>创建java工程，将天气预报wsdl生成客户端代码，具体参考：<a href="https://xeh1430.github.io/2018/11/26/Web%20Service%20Client" target="_blank" rel="noopener">Web Service 入门</a></p></blockquote><h3 id="生成代码问题解决"><a href="#生成代码问题解决" class="headerlink" title="生成代码问题解决"></a>生成代码问题解决</h3><p>直接使用wsdl调用生成代码会报错，无法生成。</p><blockquote><p><strong>修改wsdl文件里面的一个内容<br>&lt;s:element ref=”s:schema”/&gt;<br>&lt;s:any/&gt;<br>替换为<br>&lt;s:any minOccurs=”2” maxOccurs=”2”/&gt;<br>注意要全部替换</strong></p></blockquote><h3 id="调用天气预报接口"><a href="#调用天气预报接口" class="headerlink" title="调用天气预报接口"></a>调用天气预报接口</h3><p>成功生成代码之后，参考接口文档，编写客户端调用</p><blockquote><p>天气预报接口列表<br><a href="http://ws.webxml.com.cn/WebServices/WeatherWS.asmx" target="_blank" rel="noopener">http://ws.webxml.com.cn/WebServices/WeatherWS.asmx</a></p></blockquote><p>客户端调用代码<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class TestWeather &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">        WeatherWS ws = <span class="keyword">new</span> WeatherWS();</span><br><span class="line">        WeatherWSSoap soap = ws.getWeatherWSSoap();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *   获得天气预报数据</span></span><br><span class="line"><span class="comment">         *   输入参数：城市/地区ID或名称</span></span><br><span class="line"><span class="comment">         *   返回数据：一维字符串数组</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ArrayOfString weather = soap.getWeather(<span class="string">"广州"</span>, <span class="keyword">null</span>);</span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; list = weather.getString();</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"天气预报数据:\n"</span>+list);</span><br><span class="line">        System.out.<span class="built_in">println</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获得国外国家名称和与之对应的ID&lt;</span></span><br><span class="line"><span class="comment">         * 输入参数：无，</span></span><br><span class="line"><span class="comment">         * 返回数据：一维字符串数组</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ArrayOfString country = soap.getRegionCountry();</span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; list2 = country.getString();</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"国家名称对应数据:\n"</span>+list2);</span><br><span class="line">        System.out.<span class="built_in">println</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获得中国省份、直辖市、地区和与之对应的ID</span></span><br><span class="line"><span class="comment">         * 输入参数：无</span></span><br><span class="line"><span class="comment">         * 返回数据：一维字符串数组</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ArrayOfString province = soap.getRegionProvince();</span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; list3 = province.getString();</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"省份地区对应数据:\n"</span>+list3);</span><br><span class="line">        System.out.<span class="built_in">println</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获得支持的城市/地区名称和与之对应的ID</span></span><br><span class="line"><span class="comment">         * 输入参数：theRegionCode = 省市、国家ID或名称</span></span><br><span class="line"><span class="comment">         * 返回数据：一维字符串数组</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ArrayOfString cityString = soap.getSupportCityString(<span class="string">"广东"</span>);</span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; list4 = cityString.getString();</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"支持的城市/地区名称对应数据:\n"</span>+list4);</span><br><span class="line">        System.out.<span class="built_in">println</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出结果如下图<br><img src="https://xeh1430.github.io/img/webservice-out.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Web Service </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Web Service 入门</title>
      <link href="/2018/11/26/Web%20Service%20Client/"/>
      <url>/2018/11/26/Web%20Service%20Client/</url>
      
        <content type="html"><![CDATA[<h2 id="Web-Service简介"><a href="#Web-Service简介" class="headerlink" title="Web Service简介"></a>Web Service简介</h2><p>Web Service技术，能使得运行在不同机器上的不同应用无须借助附加的、专门的第三方软件或硬件，就可相互交换数据或集成。依据Web Service规范实施的应用之间，无论它们所使用的语言、平台或内部协议是什么，都可以相互交换数据。<br>WebService是一种跨编程语言和跨操作系统平台的远程调用技术。</p><p>详细信息：<a href="https://baike.baidu.com/item/Web%20Service" target="_blank" rel="noopener">WebService百度百科</a></p><h2 id="WebService-的原理"><a href="#WebService-的原理" class="headerlink" title="WebService 的原理"></a>WebService 的原理</h2><p><strong>XML+XSD,SOAP和WSDL就是构成WebService平台的三大技术</strong><br>SOAP协议 = HTTP协议 + XML数据格式  </p><p><strong>WebService开发可以分为服务器端开发和客户端开发两个方面</strong><br>对客户端而言，我们给这各类WebService客户端API传递wsdl文件的url地址，这些API就会创建出底层的代理类，我调用 这些代理，就可以访问到webservice服务。代理类把客户端的方法调用变成soap格式的请求数据再通过HTTP协议发出去，并把接收到的soap 数据变成返回值返回。<br>对服务端而言，各类WebService框架的本质就是一个大大的Servlet，当远程调用客户端给它通过http协议发送过来 soap格式的请求数据时，它分析这个数据，就知道要调用哪个java类的哪个方法，于是去查找或创建这个对象，并调用其方法，再把方法返回的结果包装成 soap格式的数据，通过http响应消息回给客户端。</p><h2 id="JAVA-WebService规范"><a href="#JAVA-WebService规范" class="headerlink" title="JAVA WebService规范"></a>JAVA WebService规范</h2><p>Java 中共有三种WebService 规范，分别是JAXM&amp;SAAJ、JAX-WS（JAX-RPC）、JAX-RS。</p><h2 id="Web-Service服务端开发"><a href="#Web-Service服务端开发" class="headerlink" title="Web Service服务端开发"></a>Web Service服务端开发</h2><p>创建一个WebService实例，实现服务端发布，客户端获取信息的功能。<br>使用idea创建springboot项目，配置WebService和web依赖<br><img src="https://xeh1430.github.io/img/webservice-2.jpg" alt=""><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.编写WebService 接口方法</span><br><span class="line">public<span class="built_in"> interface </span>HelloWebService &#123;</span><br><span class="line">    String sayHello(String name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>实现接口，作为webservice提供服务类 </span><br><span class="line"><span class="meta">@WebService</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">HelloWebServiceImpl</span> <span class="keyword">implements</span> <span class="title">HelloWebService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">String</span> sayHello(<span class="built_in">String</span> name) &#123;</span><br><span class="line">        <span class="built_in">String</span> said = name + <span class="string">",Hello~~"</span>;</span><br><span class="line">        System.out.println(said);</span><br><span class="line">        <span class="keyword">return</span> said;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span>发布服务</span><br><span class="line">@SpringBootApplication</span><br><span class="line"><span class="keyword">public</span> class App &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">        SpringApplication.<span class="built_in">run</span>(App.class, args);</span><br><span class="line">         <span class="comment">/*</span></span><br><span class="line"><span class="comment">        在服务器端运行WebServicePublish类中的main方法，控制台打印出发布webservice成功！</span></span><br><span class="line"><span class="comment">        在浏览器中输入我们在WebServicePublish类中定义的url?wsdl(注意一定要加wsdl),浏览器显示一个xml文档</span></span><br><span class="line"><span class="comment">        那么我们这个WebService就发布成功了。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//定义webService的发布地址，提供给外界使用接口的地址</span></span><br><span class="line">        <span class="keyword">String</span> url = <span class="string">"http://localhost:8081/WebService"</span>;</span><br><span class="line">        Endpoint.publish(url,<span class="keyword">new</span> HelloWebServiceImpl());</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"发布webService成功！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span>.浏览器输入 `http://localhost:<span class="number">8081</span>/WebService?wsdl` 测试服务是否发布成功</span><br></pre></td></tr></table></figure><p><img src="https://xeh1430.github.io/img/webservice-wsdl.jpg" alt=""></p><h2 id="Web-Service客户端实现"><a href="#Web-Service客户端实现" class="headerlink" title="Web Service客户端实现"></a>Web Service客户端实现</h2><p>访问<code>http://localhost:8081/WebService?wsdl</code>，将文档下载保存为wsdl格式</p><h3 id="idea解析wsdl文件反向生成代码"><a href="#idea解析wsdl文件反向生成代码" class="headerlink" title="idea解析wsdl文件反向生成代码"></a>idea解析wsdl文件反向生成代码</h3><p><strong>用idea新建一个java项目，导入wsdl文件</strong><br><strong>wsdl文件右键点击–&gt;WebServices–&gt;Generate Java Code From Wsdl–&gt;选择解析规范JAX-WS(idea自带)</strong> </p><p><img src="https://xeh1430.github.io/img/webservice-3.jpg" alt=""></p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">编写客户端</span><br><span class="line"><span class="keyword">public</span> class HelloClient &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">    <span class="comment">//创建服务视图，视图是从wsdl文件的service标签的name属性获取</span></span><br><span class="line">        HelloWebServiceImplService helloWebServiceImplService = <span class="keyword">new</span> HelloWebServiceImplService();</span><br><span class="line">        <span class="comment">//获取服务实现类，实现类从wsdl文件的portType的name属性获取</span></span><br><span class="line">        HelloWebServiceImpl helloWebService = helloWebServiceImplService.getPort(HelloWebServiceImpl.class);</span><br><span class="line">        <span class="comment">//获取查询方法，从portType的operation标签获取</span></span><br><span class="line">        <span class="keyword">String</span> <span class="built_in">str</span> = helloWebService.sayHello(<span class="string">"小明"</span>);</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="built_in">str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接执行，控制台成功输出</p>]]></content>
      
      
      <categories>
          
          <category> Web Service </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Axure入门使用</title>
      <link href="/2018/11/12/Axure/"/>
      <url>/2018/11/12/Axure/</url>
      
        <content type="html"><![CDATA[<p>Axure RP是一款专业的快速原型设计工具。<br>Axure RP是美国Axure Software Solution公司旗舰产品，是一个专业的快速原型设计工具，让负责定义需求和规格、设计功能和界面的专家能够快速创建应用软件或Web网站的线框图、流程图、原型和规格说明文档。作为专业的原型设计工具，它能快速、高效的创建原型，同时支持多人协作设计和版本控制管理。  </p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>Axure RP是收费软件，只有30天免费试用，可以到下面官网下载。<br><a href="https://www.axure.com/download" target="_blank" rel="noopener">Axure官网下载：https://www.axure.com/download</a></p><p><strong>百度云资源下载</strong><br>链接：<a href="https://pan.baidu.com/s/1dLmf5aptMGjYQYiyozgpHg" target="_blank" rel="noopener">https://pan.baidu.com/s/1dLmf5aptMGjYQYiyozgpHg</a><br>提取码：t30y<br><img src="http://xeh1430.github.io/img/source.png" alt="资源列表"></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>双击AxureRP-setup.exe进入安装提示页面，按“下一步”一直到完成安装。</p><p>打开软件，点击“Enter License”将 注册码.txt 中的激活码输入进去，<br>或者进入 帮助-&gt;管理授权 输入激活码。<br><img src="http://xeh1430.github.io/img/license.png" alt="进入管理授权功能"><br><img src="http://xeh1430.github.io/img/enterLicense.png" alt="管理授权"></p><h3 id="汉化-汉化包中附有步骤"><a href="#汉化-汉化包中附有步骤" class="headerlink" title="汉化(汉化包中附有步骤)"></a>汉化(汉化包中附有步骤)</h3><p>1.关闭Axure RP软件，将 汉化包.rar文件解压, 得到 lang 文件夹。<br>2.将解压后的lang文件夹添加到软件的安装目录中。<br><img src="http://xeh1430.github.io/img/hanhua.png" alt="软件的安装目录"></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>资源提供《Axure RP 8 实战手册》pdf，可以根据内容进行练习。</p><p><strong>在线资源</strong><br><a href="http://www.iaxure.com/menupage/book.html" target="_blank" rel="noopener">Axure官方中文网</a><br><a href="https://www.axure.com.cn" target="_blank" rel="noopener">Axure RP 8 实战手册</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Spring Boot:Whitelabel Error Page错误解决</title>
      <link href="/2018/11/12/Spring%20Boot_Whitelabel%20Error%20Page/"/>
      <url>/2018/11/12/Spring%20Boot_Whitelabel%20Error%20Page/</url>
      
        <content type="html"><![CDATA[<h4 id="使用Spring-Boot-构建一个简单的工程，访问报错，页面显示Whitelabel-Error-Page"><a href="#使用Spring-Boot-构建一个简单的工程，访问报错，页面显示Whitelabel-Error-Page" class="headerlink" title="使用Spring Boot 构建一个简单的工程，访问报错，页面显示Whitelabel Error Page"></a>使用Spring Boot 构建一个简单的工程，访问报错，页面显示Whitelabel Error Page</h4><p><img src="http://xeh1430.github.io/img/error.png" alt="访问报错图">  </p><h4 id="404，找了很久，路径没错，注解也没错，毫无头绪。最后只能求助于百度了，终于知道问题出在哪里了。"><a href="#404，找了很久，路径没错，注解也没错，毫无头绪。最后只能求助于百度了，终于知道问题出在哪里了。" class="headerlink" title="404，找了很久，路径没错，注解也没错，毫无头绪。最后只能求助于百度了，终于知道问题出在哪里了。"></a>404，找了很久，路径没错，注解也没错，毫无头绪。最后只能求助于百度了，终于知道问题出在哪里了。</h4><h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a><font color="red">原因：</font></h2><h3 id="程序只加载启动类所在包及其子包下的内容。我不小心包启动类放在了web包下，导致dao其他包的代码加载不到。"><a href="#程序只加载启动类所在包及其子包下的内容。我不小心包启动类放在了web包下，导致dao其他包的代码加载不到。" class="headerlink" title="程序只加载启动类所在包及其子包下的内容。我不小心包启动类放在了web包下，导致dao其他包的代码加载不到。"></a>程序只加载启动类所在包及其子包下的内容。我不小心包启动类放在了web包下，导致dao其他包的代码加载不到。</h3><p><img src="http://xeh1430.github.io/img/path.png" alt="错误目录图"><br><img src="http://xeh1430.github.io/img/path_true.png" alt="正确目录图"></p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a><font color="red">解决方法：</font></h2><h3 id="1-在Application类中加上"><a href="#1-在Application类中加上" class="headerlink" title="1.在Application类中加上"></a><strong>1.在Application类中加上</strong></h3><h3 id="ComponentScan-basePackages-quot-com-example-quot"><a href="#ComponentScan-basePackages-quot-com-example-quot" class="headerlink" title="@ComponentScan(basePackages = {&quot;com.example&quot;})"></a><strong><code>@ComponentScan(basePackages = {&quot;com.example&quot;})</code></strong></h3><h3 id="多个之间用”-”分隔。"><a href="#多个之间用”-”分隔。" class="headerlink" title="多个之间用”,”分隔。"></a><strong>多个之间用”,”分隔。</strong></h3><h3 id="2-将启动类放在正确位置。"><a href="#2-将启动类放在正确位置。" class="headerlink" title="2.将启动类放在正确位置。"></a><strong>2.将启动类放在正确位置。</strong></h3>]]></content>
      
      
      <categories>
          
          <category> spring boot </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>markdown入门</title>
      <link href="/2018/11/02/markdown/"/>
      <url>/2018/11/02/markdown/</url>
      
        <content type="html"><![CDATA[<p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br>Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a><strong>标题</strong></h2><p>以#表示，一个#最大，共六级</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题  </span><br><span class="line">## 二级标题  </span><br><span class="line">### 三级标题  </span><br><span class="line">#### 四级标题  </span><br><span class="line">##### 五级标题  </span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p><br></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a><strong>列表</strong></h2><p>无序列表用 - + * 任何一种都可以<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#### 无序列表  </span><br><span class="line">- 足球  </span><br><span class="line">+ 篮球  </span><br><span class="line">* 乒乓球</span><br><span class="line">#### 有序列表  </span><br><span class="line"><span class="number">1.</span> 足球  </span><br><span class="line"><span class="number">2.</span> 篮球  </span><br><span class="line"><span class="number">3.</span> 乒乓球</span><br></pre></td></tr></table></figure></p><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><ul><li>足球  </li></ul><ul><li>篮球  </li></ul><ul><li>乒乓球</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><ol><li>足球  </li><li>篮球  </li><li>乒乓球<br><br></li></ol><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a><strong>引用</strong></h2><p>只需要在文本前加入 &gt; 这种尖括号（大于号）即可<br>引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; &amp;gt;   </span><br><span class="line">&gt;这是引用的内容</span><br><span class="line"><span class="meta">&gt;&gt;</span>这是引用的内容</span><br><span class="line"><span class="meta">&gt;&gt;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure><blockquote><p>&gt;<br>这是引用的内容 </p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote><h2 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a><strong>图片与链接</strong></h2><p>图片为：<code>![]()</code><br>链接为：<code>[]()</code><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片</span>](<span class="link">https://mouapp.com.Mou_128.png</span>)  </span><br><span class="line">[<span class="string">百度</span>](<span class="link">www.baidu.com</span>)</span><br></pre></td></tr></table></figure></p><p><img src="https://xeh1430.github.io/img/sun.jpg" alt="图片"><br>链接：<a href="www.baidu.com">百度</a>  </p><h2 id="粗体、斜体与删除线"><a href="#粗体、斜体与删除线" class="headerlink" title="粗体、斜体与删除线"></a><strong>粗体、斜体与删除线</strong></h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*<span class="strong">*粗体*</span>*  </span><br><span class="line"><span class="strong">*斜体*</span>  </span><br><span class="line">**<span class="strong">*加粗并倾斜*</span>** </span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><p>粗体<br><strong>粗体</strong><br><em>斜体</em><br><strong><em>加粗并倾斜</em></strong><br><del>删除线</del></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a><strong>表格</strong></h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">| Tables        |</span> Are           <span class="params">| Cool  |</span>  </span><br><span class="line"><span class="params">| ------------- |</span><span class="symbol">:-------------</span><span class="symbol">:|</span> -----<span class="symbol">:|</span>  </span><br><span class="line"><span class="params">| col 3 is      |</span> right-aligned <span class="params">| $1600 |</span>  </span><br><span class="line"><span class="params">| col 2 is      |</span> centered      <span class="params">|   $12 |</span>  </span><br><span class="line"><span class="params">| zebra stripes |</span> are neat      <span class="params">|    $1 |</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><h2 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a><strong>代码框</strong></h2><blockquote><p>两个 ` 把代码包含(单行代码)<br>三个 ` 报代码包含(多行代码)</p></blockquote><p><code>System.out.println(&quot;Hello MarkDown!&quot;)</code><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System<span class="selector-class">.out</span><span class="selector-class">.println</span>(<span class="string">"Hello MarkDown!"</span>)</span><br></pre></td></tr></table></figure></p><h2 id="字体、字号与颜色"><a href="#字体、字号与颜色" class="headerlink" title="字体、字号与颜色"></a><strong>字体、字号与颜色</strong></h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;font <span class="attribute">face</span>=<span class="string">"黑体"</span>&gt;我是黑体字&lt;/font&gt;</span><br><span class="line">&lt;font <span class="attribute">face</span>=<span class="string">"微软雅黑"</span>&gt;我是微软雅黑&lt;/font&gt;</span><br><span class="line">&lt;font <span class="attribute">face</span>=<span class="string">"STCAIYUN"</span>&gt;我是华文彩云&lt;/font&gt;</span><br><span class="line">&lt;font <span class="attribute">color</span>=#0099ff <span class="attribute">size</span>=5 <span class="attribute">face</span>=<span class="string">"黑体"</span>&gt;color=#0099ff <span class="attribute">size</span>=72 <span class="attribute">face</span>=<span class="string">"黑体"</span>&lt;/font&gt;</span><br><span class="line">Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3。</span><br><span class="line">&lt;font <span class="attribute">color</span>=#00ffff <span class="attribute">size</span>=72&gt;color=#00ffff&lt;/font&gt;</span><br><span class="line">&lt;font <span class="attribute">color</span>=gray <span class="attribute">size</span>=72&gt;color=gray&lt;/font&gt;</span><br></pre></td></tr></table></figure><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color="#0099ff" size="5" face="黑体">color=#0099ff size=5 face=”黑体”</font><br><font color="#00ffff" size="7">color=#00ffff</font><br><font color="gray" size="6">color=gray</font>  <h2 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h2><p><code>&lt;center&gt;居中显示&lt;center&gt;</code>   </p><p><center>居中显示<center>  </center></center></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a><strong>分割线</strong></h2><p>分割线的语法只需要三个 * 号<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span><span class="meta">---</span></span><br><span class="line"><span class="string">***</span> </span><br><span class="line"><span class="string">****</span></span><br></pre></td></tr></table></figure></p><hr><hr><hr><hr><p>参考：<br>[1]: <a href="https://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="noopener">https://www.jianshu.com/p/1e402922ee32/</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Hexo 入门</title>
      <link href="/2018/10/16/Hello%20World/"/>
      <url>/2018/10/16/Hello%20World/</url>
      
        <content type="html"><![CDATA[<p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo官网</a><br><a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo文档</a><br><a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">Hexo GitHub</a></p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br><span class="line">$ hexo n <span class="string">"My New Post"</span> (简写)</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">$ hexo s (简写)</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo g (简写)</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br><span class="line">$ hexo d (简写)</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>

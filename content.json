{"meta":{"title":"xeh的学习笔记","subtitle":"将记录当成一种习惯","description":"路漫漫其修远兮！","author":"xeh","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Web Service调用天气预报","slug":"Web Service Weather","date":"2018-11-26T07:40:34.000Z","updated":"2018-11-26T08:50:42.836Z","comments":true,"path":"2018/11/26/Web Service Weather/","link":"","permalink":"http://yoursite.com/2018/11/26/Web Service Weather/","excerpt":"","text":"webservice 资源 免费webservice接口，包含天气预报、国内手机号码归属地查询WEB服务等多种服务http://www.webxml.com.cn/zh_cn/web_services.aspx本次项目使用天气预报的接口http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl创建java工程，将天气预报wsdl生成客户端代码，具体参考：Web Service 入门 生成代码问题解决直接使用wsdl调用生成代码会报错，无法生成。 修改wsdl文件里面的一个内容&lt;s:element ref=”s:schema”/&gt;&lt;s:any/&gt;替换为&lt;s:any minOccurs=”2” maxOccurs=”2”/&gt;注意要全部替换 调用天气预报接口成功生成代码之后，参考接口文档，编写客户端调用 天气预报接口列表http://ws.webxml.com.cn/WebServices/WeatherWS.asmx 客户端调用代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546public class TestWeather &#123; public static void main(String[] args) &#123; WeatherWS ws = new WeatherWS(); WeatherWSSoap soap = ws.getWeatherWSSoap(); /** * 获得天气预报数据 * 输入参数：城市/地区ID或名称 * 返回数据：一维字符串数组 */ ArrayOfString weather = soap.getWeather(\"广州\", null); List&lt;String&gt; list = weather.getString(); System.out.println(\"天气预报数据:\\n\"+list); System.out.println(); /** * 获得国外国家名称和与之对应的ID&lt; * 输入参数：无， * 返回数据：一维字符串数组 */ ArrayOfString country = soap.getRegionCountry(); List&lt;String&gt; list2 = country.getString(); System.out.println(\"国家名称对应数据:\\n\"+list2); System.out.println(); /** * 获得中国省份、直辖市、地区和与之对应的ID * 输入参数：无 * 返回数据：一维字符串数组 */ ArrayOfString province = soap.getRegionProvince(); List&lt;String&gt; list3 = province.getString(); System.out.println(\"省份地区对应数据:\\n\"+list3); System.out.println(); /** * 获得支持的城市/地区名称和与之对应的ID * 输入参数：theRegionCode = 省市、国家ID或名称 * 返回数据：一维字符串数组 */ ArrayOfString cityString = soap.getSupportCityString(\"广东\"); List&lt;String&gt; list4 = cityString.getString(); System.out.println(\"支持的城市/地区名称对应数据:\\n\"+list4); System.out.println(); &#125;&#125; 输出结果如下图","categories":[{"name":"Web Service","slug":"Web-Service","permalink":"http://yoursite.com/categories/Web-Service/"}],"tags":[],"keywords":[{"name":"Web Service","slug":"Web-Service","permalink":"http://yoursite.com/categories/Web-Service/"}]},{"title":"Web Service 入门","slug":"Web Service Client","date":"2018-11-26T01:55:20.000Z","updated":"2018-11-26T08:00:10.905Z","comments":true,"path":"2018/11/26/Web Service Client/","link":"","permalink":"http://yoursite.com/2018/11/26/Web Service Client/","excerpt":"","text":"Web Service简介Web Service技术，能使得运行在不同机器上的不同应用无须借助附加的、专门的第三方软件或硬件，就可相互交换数据或集成。依据Web Service规范实施的应用之间，无论它们所使用的语言、平台或内部协议是什么，都可以相互交换数据。WebService是一种跨编程语言和跨操作系统平台的远程调用技术。 详细信息：WebService百度百科 WebService 的原理XML+XSD,SOAP和WSDL就是构成WebService平台的三大技术SOAP协议 = HTTP协议 + XML数据格式 WebService开发可以分为服务器端开发和客户端开发两个方面对客户端而言，我们给这各类WebService客户端API传递wsdl文件的url地址，这些API就会创建出底层的代理类，我调用 这些代理，就可以访问到webservice服务。代理类把客户端的方法调用变成soap格式的请求数据再通过HTTP协议发出去，并把接收到的soap 数据变成返回值返回。对服务端而言，各类WebService框架的本质就是一个大大的Servlet，当远程调用客户端给它通过http协议发送过来 soap格式的请求数据时，它分析这个数据，就知道要调用哪个java类的哪个方法，于是去查找或创建这个对象，并调用其方法，再把方法返回的结果包装成 soap格式的数据，通过http响应消息回给客户端。 JAVA WebService规范Java 中共有三种WebService 规范，分别是JAXM&amp;SAAJ、JAX-WS（JAX-RPC）、JAX-RS。 Web Service服务端开发创建一个WebService实例，实现服务端发布，客户端获取信息的功能。使用idea创建springboot项目，配置WebService和web依赖12341.编写WebService 接口方法public interface HelloWebService &#123; String sayHello(String name);&#125; 123456789102.实现接口，作为webservice提供服务类 @WebServicepublic class HelloWebServiceImpl implements HelloWebService &#123; @Override public String sayHello(String name) &#123; String said = name + \",Hello~~\"; System.out.println(said); return said; &#125;&#125; 12345678910111213141516173.发布服务@SpringBootApplicationpublic class App &#123; public static void main(String[] args) &#123; SpringApplication.run(App.class, args); /* 在服务器端运行WebServicePublish类中的main方法，控制台打印出发布webservice成功！ 在浏览器中输入我们在WebServicePublish类中定义的url?wsdl(注意一定要加wsdl),浏览器显示一个xml文档 那么我们这个WebService就发布成功了。 */ //定义webService的发布地址，提供给外界使用接口的地址 String url = \"http://localhost:8081/WebService\"; Endpoint.publish(url,new HelloWebServiceImpl()); System.out.println(\"发布webService成功！\"); &#125;&#125; 14.浏览器输入 `http://localhost:8081/WebService?wsdl` 测试服务是否发布成功 Web Service客户端实现访问http://localhost:8081/WebService?wsdl，将文档下载保存为wsdl格式 idea解析wsdl文件反向生成代码用idea新建一个java项目，导入wsdl文件wsdl文件右键点击–&gt;WebServices–&gt;Generate Java Code From Wsdl–&gt;选择解析规范JAX-WS(idea自带) 123456789101112编写客户端public class HelloClient &#123; public static void main(String[] args) &#123; //创建服务视图，视图是从wsdl文件的service标签的name属性获取 HelloWebServiceImplService helloWebServiceImplService = new HelloWebServiceImplService(); //获取服务实现类，实现类从wsdl文件的portType的name属性获取 HelloWebServiceImpl helloWebService = helloWebServiceImplService.getPort(HelloWebServiceImpl.class); //获取查询方法，从portType的operation标签获取 String str = helloWebService.sayHello(\"小明\"); System.out.println(str); &#125;&#125; 直接执行，控制台成功输出","categories":[{"name":"Web Service","slug":"Web-Service","permalink":"http://yoursite.com/categories/Web-Service/"}],"tags":[],"keywords":[{"name":"Web Service","slug":"Web-Service","permalink":"http://yoursite.com/categories/Web-Service/"}]},{"title":"Axure入门使用","slug":"Axure","date":"2018-11-12T14:26:50.000Z","updated":"2018-11-20T03:40:46.508Z","comments":true,"path":"2018/11/12/Axure/","link":"","permalink":"http://yoursite.com/2018/11/12/Axure/","excerpt":"","text":"Axure RP是一款专业的快速原型设计工具。Axure RP是美国Axure Software Solution公司旗舰产品，是一个专业的快速原型设计工具，让负责定义需求和规格、设计功能和界面的专家能够快速创建应用软件或Web网站的线框图、流程图、原型和规格说明文档。作为专业的原型设计工具，它能快速、高效的创建原型，同时支持多人协作设计和版本控制管理。 下载Axure RP是收费软件，只有30天免费试用，可以到下面官网下载。Axure官网下载：https://www.axure.com/download 百度云资源下载链接：https://pan.baidu.com/s/1dLmf5aptMGjYQYiyozgpHg提取码：t30y 安装双击AxureRP-setup.exe进入安装提示页面，按“下一步”一直到完成安装。 打开软件，点击“Enter License”将 注册码.txt 中的激活码输入进去，或者进入 帮助-&gt;管理授权 输入激活码。 汉化(汉化包中附有步骤)1.关闭Axure RP软件，将 汉化包.rar文件解压, 得到 lang 文件夹。2.将解压后的lang文件夹添加到软件的安装目录中。 使用资源提供《Axure RP 8 实战手册》pdf，可以根据内容进行练习。 在线资源Axure官方中文网Axure RP 8 实战手册","categories":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/工具/"}],"tags":[],"keywords":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/工具/"}]},{"title":"Spring Boot:Whitelabel Error Page错误解决","slug":"Spring Boot_Whitelabel Error Page","date":"2018-11-11T16:00:00.000Z","updated":"2018-11-20T03:37:19.605Z","comments":true,"path":"2018/11/12/Spring Boot_Whitelabel Error Page/","link":"","permalink":"http://yoursite.com/2018/11/12/Spring Boot_Whitelabel Error Page/","excerpt":"","text":"使用Spring Boot 构建一个简单的工程，访问报错，页面显示Whitelabel Error Page 404，找了很久，路径没错，注解也没错，毫无头绪。最后只能求助于百度了，终于知道问题出在哪里了。原因：程序只加载启动类所在包及其子包下的内容。我不小心包启动类放在了web包下，导致dao其他包的代码加载不到。 解决方法：1.在Application类中加上@ComponentScan(basePackages = {&quot;com.example&quot;})多个之间用”,”分隔。2.将启动类放在正确位置。","categories":[{"name":"spring boot","slug":"spring-boot","permalink":"http://yoursite.com/categories/spring-boot/"}],"tags":[],"keywords":[{"name":"spring boot","slug":"spring-boot","permalink":"http://yoursite.com/categories/spring-boot/"}]},{"title":"markdown入门","slug":"markdown","date":"2018-11-02T09:29:07.000Z","updated":"2018-11-26T02:23:06.734Z","comments":true,"path":"2018/11/02/markdown/","link":"","permalink":"http://yoursite.com/2018/11/02/markdown/","excerpt":"","text":"Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。 标题以#表示，一个#最大，共六级 123456# 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 一级标题二级标题三级标题四级标题五级标题六级标题 列表无序列表用 - + * 任何一种都可以12345678#### 无序列表 - 足球 + 篮球 * 乒乓球#### 有序列表 1. 足球 2. 篮球 3. 乒乓球 无序列表 足球 篮球 乒乓球 有序列表 足球 篮球 乒乓球 引用只需要在文本前加入 &gt; 这种尖括号（大于号）即可引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt; 1234&gt; &amp;gt; &gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容 &gt;这是引用的内容 这是引用的内容 这是引用的内容 图片与链接图片为：![]()链接为：[]()12![图片](https://mouapp.com.Mou_128.png) [百度](www.baidu.com) 链接：百度 粗体、斜体与删除线1234**粗体** *斜体* ***加粗并倾斜*** ~~删除线~~ 粗体粗体斜体加粗并倾斜删除线 表格12345| Tables | Are | Cool | | ------------- |:-------------:| -----:| | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 代码框 两个 ` 把代码包含(单行代码)三个 ` 报代码包含(多行代码) System.out.println(&quot;Hello MarkDown!&quot;)1System.out.println(\"Hello MarkDown!\") 字体、字号与颜色1234567&lt;font face=\"黑体\"&gt;我是黑体字&lt;/font&gt;&lt;font face=\"微软雅黑\"&gt;我是微软雅黑&lt;/font&gt;&lt;font face=\"STCAIYUN\"&gt;我是华文彩云&lt;/font&gt;&lt;font color=#0099ff size=5 face=\"黑体\"&gt;color=#0099ff size=72 face=\"黑体\"&lt;/font&gt;Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3。&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt;&lt;font color=gray size=72&gt;color=gray&lt;/font&gt; 我是黑体字我是微软雅黑我是华文彩云color=#0099ff size=5 face=”黑体”color=#00ffffcolor=gray 居中&lt;center&gt;居中显示&lt;center&gt; 居中显示 分割线分割线的语法只需要三个 * 号1234-------*** **** 参考：[1]: https://www.jianshu.com/p/1e402922ee32/","categories":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/工具/"}],"tags":[],"keywords":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/工具/"}]},{"title":"Hexo 入门","slug":"Hello World","date":"2018-10-15T16:00:00.000Z","updated":"2018-11-20T03:41:37.555Z","comments":true,"path":"2018/10/16/Hello World/","link":"","permalink":"http://yoursite.com/2018/10/16/Hello World/","excerpt":"","text":"Hexo官网Hexo文档Hexo GitHub 快速开始新建文章12$ hexo new \"My New Post\"$ hexo n \"My New Post\" (简写) 更多信息: Writing 启动服务12$ hexo server$ hexo s (简写) 更多信息: Server 生成静态文件12$ hexo generate$ hexo g (简写) 更多信息: Generating 部署到远程站点12$ hexo deploy$ hexo d (简写) 更多信息: Deployment","categories":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/工具/"}],"tags":[],"keywords":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/工具/"}]}]}